
# recursive approach:
forall x :: x > 0 -> F(x) = x + F(x-1);
assume F(0) = 0;
def f(x) {
    forall x :: x > 0 -> F(x) = x + F(x-1);
    assert F(0) = 0;
    assume x >= 0;
    ret := 0;
    if (x = 0) then {
        skip;
    } else {
        ret := x + f(x - 1);
    };
    return ret;
    assert RET = F(x);
};

assert f(0) = 0;
assert f(1) = 1;
assert f(2) = 3;


