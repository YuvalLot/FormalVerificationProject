


answer := f(g(x, h(t)));

=>

assert H_PRE (t) ;
assume H_POST( @temp1 ) && @temp1 = h(t);
answer := f(g(x, @temp1));

=>

assert H_PRE (t) ;
assume H_POST( @temp1 ) && @temp1 = h(t);
assert G_PRE (x, @temp1);
assume G_POST( @temp2 ) && @temp2 = g(x, @temp1);
answer := f(@temp2);

=> 

assert H_PRE (t) ;
assume H_POST( @temp1 ) && @temp1 = h(t);
assert G_PRE (x, @temp1);
assume G_POST( @temp2 ) && @temp2 = g(x, @temp1);
assert F_PRE (@temp2);
asusme F_POST( @temp3) && @temp3 = f(@temp2);
answer := @temp3 ;

