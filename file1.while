
forall x :: (x > 0) -> 1 + F(x-1) = F(x);
forall x :: F(0) = 0;
def f(x) {
<<<<<<< HEAD
    assume x >= 0;
=======
    assume x >= 0 && x <= 20;
>>>>>>> c8275179531fadc35be82d73845af9e848404a06
    ret := 0;
    if (x = 0) then {
        skip;
    } else {
<<<<<<< HEAD
        ret := x + f(x - 1);
    };
    return ret;
    assert RET = x * (x + 1) / 2;
};
=======
        ret := 1 + f(x - 1);
    };
    return ret;
    assert RET = F(x);
};

assume y >= 0;
assume y <= 5;
assert f(y) = y;
>>>>>>> c8275179531fadc35be82d73845af9e848404a06
